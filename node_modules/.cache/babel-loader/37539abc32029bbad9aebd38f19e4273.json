{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/react/react_users_sql_1.3.0/src/components/UserLog/SuccessLogin.js\";\n\n/**\n * This component just show the information to the user\n * about the successful login. After a few seconds, the\n * user is redirected to the home page.\n */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Use of the bootstrap for the better style of all components\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../App.css';\n\nvar SuccessLogin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuccessLogin, _Component);\n\n  function SuccessLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SuccessLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SuccessLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.timeStatus = '';\n    _this.state = {\n      message: '' // Message to be shown to the user\n\n    };\n    return _this;\n  }\n\n  _createClass(SuccessLogin, [{\n    key: \"componentDidMount\",\n\n    /**\n     * When the component is mounted, it creates this message\n     * to be show. This message includes a link to the home page.\n     */\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  message: React.createElement(\"div\", {\n                    className: \"App-login\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 29\n                    },\n                    __self: this\n                  }, React.createElement(\"h1\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 30\n                    },\n                    __self: this\n                  }, \"Login Successful\"), React.createElement(\"p\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 31\n                    },\n                    __self: this\n                  }, \"If you are not redirected in 5 seconds, please click\", React.createElement(Link, {\n                    to: \"/\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 33\n                    },\n                    __self: this\n                  }, \"here\")))\n                }); // This is the important part. The interval of three seconds\n                // before running the call instruction\n\n                this.timeStatus = setInterval(function () {\n                  return (// Calling the function \"updateToken\" stored on the Login component\n                    _this2.props.updateHandler()\n                  );\n                }, 3000);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // Clearing the interval when this component unmounts, then it's riderected\n    // to the homepage where is the list of users\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clearInterval(this.timeStatus);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.message;\n    }\n  }]);\n\n  return SuccessLogin;\n}(Component);\n\nexport default SuccessLogin;","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql_1.3.0/src/components/UserLog/SuccessLogin.js"],"names":["React","Component","Link","SuccessLogin","timeStatus","state","message","setState","setInterval","props","updateHandler","clearInterval"],"mappings":";;;;;;;;;AAAA;;;;;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAO,sCAAP;AACA,OAAO,eAAP;;IAEMC,Y;;;;;;;;;;;;;;;;;UAGJC,U,GAAa,E;UAEbC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH,CACM;;AADN,K;;;;;;;AAIR;;;;;;;;;;;;;;AAKE,qBAAKC,QAAL,CAAc;AACZD,kBAAAA,OAAO,EACL;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAEE,oBAAC,IAAD;AAAM,oBAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CAFF;AAFU,iBAAd,E,CAWA;AACA;;AACA,qBAAKF,UAAL,GAAkBI,WAAW,CAC3B;AAAA,yBACE;AACA,oBAAA,MAAI,CAACC,KAAL,CAAWC,aAAX;AAFF;AAAA,iBAD2B,EAI3B,IAJ2B,CAA7B;;;;;;;;;;;;;QAQF;AACA;;;;;;;;;;;;AAEEC,gBAAAA,aAAa,CAAC,KAAKP,UAAN,CAAb;;;;;;;;;;;;;;;;6BAEO;AACP,aAAO,KAAKC,KAAL,CAAWC,OAAlB;AACD;;;;EA1CwBL,S;;AA6C3B,eAAeE,YAAf","sourcesContent":["/**\n * This component just show the information to the user\n * about the successful login. After a few seconds, the\n * user is redirected to the home page.\n */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Use of the bootstrap for the better style of all components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../App.css';\n\nclass SuccessLogin extends Component {\n  // This represents the timeout status. After the timeout triggers, it must\n  // be cleared. Therefore, this variable is used.\n  timeStatus = '';\n\n  state = {\n    message: '' // Message to be shown to the user\n  };\n\n  /**\n   * When the component is mounted, it creates this message\n   * to be show. This message includes a link to the home page.\n   */\n  async componentDidMount() {\n    this.setState({\n      message: (\n        <div className=\"App-login\">\n          <h1>Login Successful</h1>\n          <p>\n            If you are not redirected in 5 seconds, please click\n            <Link to=\"/\">here</Link>\n          </p>\n        </div>\n      )\n    });\n    // This is the important part. The interval of three seconds\n    // before running the call instruction\n    this.timeStatus = setInterval(\n      () =>\n        // Calling the function \"updateToken\" stored on the Login component\n        this.props.updateHandler(),\n      3000\n    );\n  }\n\n  // Clearing the interval when this component unmounts, then it's riderected\n  // to the homepage where is the list of users\n  async componentWillUnmount() {\n    clearInterval(this.timeStatus);\n  }\n  render() {\n    return this.state.message;\n  }\n}\n\nexport default SuccessLogin;\n"]},"metadata":{},"sourceType":"module"}
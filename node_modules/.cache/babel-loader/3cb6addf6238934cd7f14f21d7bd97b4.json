{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/react/react_users_sql_1.3.1/src/components/UserLog/SuccessLogout.js\";\n\n/**\n * This component just show the information to the user\n * about the successful logout. After a few seconds, the\n * user is redirected to the login screen.\n */\nimport React, { Component } from 'react'; // Use of the bootstrap for the better style of all components\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../App.css';\n\nvar SuccessLogout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuccessLogout, _Component);\n\n  function SuccessLogout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SuccessLogout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SuccessLogout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.timeStatus = '';\n    _this.state = {\n      message: '' // Message to be shown to the user\n\n    };\n    return _this;\n  }\n\n  _createClass(SuccessLogout, [{\n    key: \"componentDidMount\",\n\n    /**\n     * When the component is mounted, it creates this message\n     * to be show. This message includes a link to the home page.\n     */\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  message: React.createElement(\"div\", {\n                    className: \"App-login\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 28\n                    },\n                    __self: this\n                  }, React.createElement(\"h1\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 29\n                    },\n                    __self: this\n                  }, \"Logout Successful\"), React.createElement(\"p\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 30\n                    },\n                    __self: this\n                  }, \"You will be redirected to the login page.\"))\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // Clearing the interval when this component unmounts, then it's riderected\n    // to the homepage where is the list of users\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clearInterval(this.timeStatus);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Just the render of the message\n      return this.state.message;\n    }\n  }]);\n\n  return SuccessLogout;\n}(Component);\n\nexport default SuccessLogout;","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql_1.3.1/src/components/UserLog/SuccessLogout.js"],"names":["React","Component","SuccessLogout","timeStatus","state","message","setState","clearInterval"],"mappings":";;;;;;;;;AAAA;;;;;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAO,sCAAP;AACA,OAAO,eAAP;;IAEMC,a;;;;;;;;;;;;;;;;;UAGJC,U,GAAa,E;UAEbC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH,CACM;;AADN,K;;;;;;;AAIR;;;;;;;;;;;;AAKE,qBAAKC,QAAL,CAAc;AACZD,kBAAAA,OAAO,EACL;AAAK,oBAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF;AAFU,iBAAd;;;;;;;;;;;;;QAUF;AACA;;;;;;;;;;;;AAEEE,gBAAAA,aAAa,CAAC,KAAKJ,UAAN,CAAb;;;;;;;;;;;;;;;;6BAEO;AACP;AACA,aAAO,KAAKC,KAAL,CAAWC,OAAlB;AACD;;;;EAhCyBJ,S;;AAmC5B,eAAeC,aAAf","sourcesContent":["/**\n * This component just show the information to the user\n * about the successful logout. After a few seconds, the\n * user is redirected to the login screen.\n */\nimport React, { Component } from 'react';\n\n// Use of the bootstrap for the better style of all components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../App.css';\n\nclass SuccessLogout extends Component {\n  // This represents the timeout status. After the timeout triggers, it must\n  // be cleared. Therefore, this variable is used.\n  timeStatus = '';\n\n  state = {\n    message: '' // Message to be shown to the user\n  };\n\n  /**\n   * When the component is mounted, it creates this message\n   * to be show. This message includes a link to the home page.\n   */\n  async componentDidMount() {\n    this.setState({\n      message: (\n        <div className=\"App-login\">\n          <h1>Logout Successful</h1>\n          <p>You will be redirected to the login page.</p>\n        </div>\n      )\n    });\n  }\n\n  // Clearing the interval when this component unmounts, then it's riderected\n  // to the homepage where is the list of users\n  async componentWillUnmount() {\n    clearInterval(this.timeStatus);\n  }\n  render() {\n    // Just the render of the message\n    return this.state.message;\n  }\n}\n\nexport default SuccessLogout;\n"]},"metadata":{},"sourceType":"module"}
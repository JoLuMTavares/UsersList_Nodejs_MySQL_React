{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql_1.3.1/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/react/react_users_sql_1.3.1/src/components/Users.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport User from '../layouts/User';\n/*\n    This component shows the list of users stored on the database.\n    A table with the detailed information about each user.\n\n    There's also the button for each name that removes the specific user\n    from the database.\n*/\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Users)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      users: null\n    };\n\n    _this.removeUserById = function (id) {\n      try {\n        // Sending the request to the server\n        Axios.delete('http://localhost:1024/user?id=' + id).then(function (response) {\n          // If the operation went well, this same user is also removed from\n          // the \"users\" object\n          var usersTemp = _toConsumableArray(_this.state.users);\n\n          var finalUsers = usersTemp.filter(function (user) {\n            return user.id !== id;\n          });\n\n          _this.setState({\n            users: finalUsers\n          });\n\n          alert('User successfully deleted.');\n        });\n      } catch (error) {\n        console.log('error = ' + error);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n\n    /**\n     * After being mounted, a request is sent to the server.\n     * The response will be an array with the list of users.\n     */\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  Axios.get('http://localhost:1024/userslist').then(function (response) {\n                    _this2.setState({\n                      users: response.data\n                    });\n                  });\n                } catch (error) {\n                  console.log('error = ' + error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // Remove user from the array using an id\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"UsersList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"headersStyle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Email\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Website\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        className: \"dataCells\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.users && this.state.users.map(function (user) {\n        return React.createElement(User, {\n          key: user.id,\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          city: user.city,\n          phone: user.phone,\n          website: user.website,\n          removeHandler: _this3.removeUserById,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport { Users as default };","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql_1.3.1/src/components/Users.js"],"names":["React","Component","Axios","BrowserRouter","Router","Route","Switch","Link","User","Users","state","users","removeUserById","id","delete","then","response","usersTemp","finalUsers","filter","user","setState","alert","error","console","log","get","data","map","name","email","city","phone","website"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA;;;;;;;;IAOqBC,K;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAqBRC,c,GAAiB,UAAAC,EAAE,EAAI;AACrB,UAAI;AACF;AACAX,QAAAA,KAAK,CAACY,MAAN,CAAa,mCAAmCD,EAAhD,EAAoDE,IAApD,CAAyD,UAAAC,QAAQ,EAAI;AACnE;AACA;AACA,cAAMC,SAAS,sBAAO,MAAKP,KAAL,CAAWC,KAAlB,CAAf;;AAEA,cAAIO,UAAU,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACP,EAAL,KAAYA,EAAhB;AAAA,WAArB,CAAjB;;AAEA,gBAAKQ,QAAL,CAAc;AACZV,YAAAA,KAAK,EAAEO;AADK,WAAd;;AAGAI,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,SAXD;AAYD,OAdD,CAcE,OAAOC,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAzB;AACD;AACF,K;;;;;;;;AAnCD;;;;;;;;;;;;;;AAKE,oBAAI;AACFrB,kBAAAA,KAAK,CAACwB,GAAN,CAAU,iCAAV,EAA6CX,IAA7C,CAAkD,UAAAC,QAAQ,EAAI;AAC5D,oBAAA,MAAI,CAACK,QAAL,CAAc;AACZV,sBAAAA,KAAK,EAAEK,QAAQ,CAACW;AADJ,qBAAd;AAGD,mBAJD;AAKD,iBAND,CAME,OAAOJ,KAAP,EAAc;AACdC,kBAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAzB;AACD;;;;;;;;;;;;;QAGH;;;;6BAqBS;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADF,CADF,EAWE;AAAO,QAAA,SAAS,EAAC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKb,KAAL,CAAWC,KAAX,IACC,KAAKD,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqB,UAAAR,IAAI,EAAI;AAC3B,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACP,EADZ;AAEE,UAAA,EAAE,EAAEO,IAAI,CAACP,EAFX;AAGE,UAAA,IAAI,EAAEO,IAAI,CAACS,IAHb;AAIE,UAAA,KAAK,EAAET,IAAI,CAACU,KAJd;AAKE,UAAA,IAAI,EAAEV,IAAI,CAACW,IALb;AAME,UAAA,KAAK,EAAEX,IAAI,CAACY,KANd;AAOE,UAAA,OAAO,EAAEZ,IAAI,CAACa,OAPhB;AAQE,UAAA,aAAa,EAAE,MAAI,CAACrB,cARtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,OAbD,CAHJ,CAXF,CADF,CADF;AAkCD;;;;EA9EgCX,S;;SAAdQ,K","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nimport User from '../layouts/User';\n\n/*\n    This component shows the list of users stored on the database.\n    A table with the detailed information about each user.\n\n    There's also the button for each name that removes the specific user\n    from the database.\n*/\nexport default class Users extends Component {\n  // State with the only needed object, initialized with null value\n  state = {\n    users: null\n  };\n\n  /**\n   * After being mounted, a request is sent to the server.\n   * The response will be an array with the list of users.\n   */\n  async componentDidMount() {\n    try {\n      Axios.get('http://localhost:1024/userslist').then(response => {\n        this.setState({\n          users: response.data\n        });\n      });\n    } catch (error) {\n      console.log('error = ' + error);\n    }\n  }\n\n  // Remove user from the array using an id\n  removeUserById = id => {\n    try {\n      // Sending the request to the server\n      Axios.delete('http://localhost:1024/user?id=' + id).then(response => {\n        // If the operation went well, this same user is also removed from\n        // the \"users\" object\n        const usersTemp = [...this.state.users];\n\n        let finalUsers = usersTemp.filter(user => user.id !== id);\n\n        this.setState({\n          users: finalUsers\n        });\n        alert('User successfully deleted.');\n      });\n    } catch (error) {\n      console.log('error = ' + error);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"Users\">\n        <table className=\"UsersList\">\n          <thead>\n            <tr className=\"headersStyle\">\n              <th>Name</th>\n              <th>Email</th>\n              <th>City</th>\n              <th>Phone</th>\n              <th>Website</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody className=\"dataCells\">\n            {/* Here the cell are only shown when the \"users\" object has information stored. By the use of \"map\" (which works as a loop), each selected user is then presented by the name. */}\n            {this.state.users &&\n              this.state.users.map(user => {\n                return (\n                  <User\n                    key={user.id}\n                    id={user.id}\n                    name={user.name}\n                    email={user.email}\n                    city={user.city}\n                    phone={user.phone}\n                    website={user.website}\n                    removeHandler={this.removeUserById}\n                  />\n                );\n              })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
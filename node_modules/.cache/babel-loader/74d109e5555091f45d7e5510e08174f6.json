{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql_1.3.0/node_modules/@babel/runtime/helpers/esm/inherits\";\n\n/**\n * This component just show the information to the user\n * about the successful login. After a few seconds, the\n * user is redirected to the home page.\n */\nimport React, { Component } from 'react';\n\nvar SuccessLogin =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SuccessLogin, _Component);\n\n  function SuccessLogin() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SuccessLogin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SuccessLogin)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.timeStatus = '';\n    _this.state = {\n      message: '' // Message to be shown to the user\n\n    };\n    return _this;\n  }\n\n  _createClass(SuccessLogin, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.timeStatus = setTimeout(function () {\n                  return _this2.setState({\n                    message: \"<div className=\\\"App-login\\\"><h1>Login Successful</h1></div>\"\n                  });\n                }, 5000);\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }() // Clearing the timeout when this component unmounts, then it's riderected\n    // to the homepage where is the list of users\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                clearTimeout(this.timeStatus);\n                this.props.history.push('/'); // Keeping the home page link so it goes to the home component\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.message;\n    }\n  }]);\n\n  return SuccessLogin;\n}(Component);\n\nexport default SuccessLogin;","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql_1.3.0/src/components/UserLog/SuccessLogin.js"],"names":["React","Component","SuccessLogin","timeStatus","state","message","setTimeout","setState","clearTimeout","props","history","push"],"mappings":";;;;;;;;AAAA;;;;;AAKA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Y;;;;;;;;;;;;;;;;;UAGJC,U,GAAa,E;UAEbC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,EADH,CACM;;AADN,K;;;;;;;;;;;;;;;;AAKN,qBAAKF,UAAL,GAAkBG,UAAU,CAC1B;AAAA,yBACE,MAAI,CAACC,QAAL,CAAc;AACZF,oBAAAA,OAAO;AADK,mBAAd,CADF;AAAA,iBAD0B,EAK1B,IAL0B,CAA5B;;;;;;;;;;;;;QASF;AACA;;;;;;;;;;;;AAEEG,gBAAAA,YAAY,CAAC,KAAKL,UAAN,CAAZ;AACA,qBAAKM,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,E,CAA8B;;;;;;;;;;;;;;;;6BAEvB;AACP,aAAO,KAAKP,KAAL,CAAWC,OAAlB;AACD;;;;EA3BwBJ,S;;AA8B3B,eAAeC,YAAf","sourcesContent":["/**\n * This component just show the information to the user\n * about the successful login. After a few seconds, the\n * user is redirected to the home page.\n */\nimport React, { Component } from 'react';\n\nclass SuccessLogin extends Component {\n  // This represents the timeout status. After the timeout triggers, it must\n  // be cleared. Therefore, this variable is used.\n  timeStatus = '';\n\n  state = {\n    message: '' // Message to be shown to the user\n  };\n\n  async componentDidMount() {\n    this.timeStatus = setTimeout(\n      () =>\n        this.setState({\n          message: `<div className=\"App-login\"><h1>Login Successful</h1></div>`\n        }),\n      5000\n    );\n  }\n\n  // Clearing the timeout when this component unmounts, then it's riderected\n  // to the homepage where is the list of users\n  async componentWillUnmount() {\n    clearTimeout(this.timeStatus);\n    this.props.history.push('/'); // Keeping the home page link so it goes to the home component\n  }\n  render() {\n    return this.state.message;\n  }\n}\n\nexport default SuccessLogin;\n"]},"metadata":{},"sourceType":"module"}
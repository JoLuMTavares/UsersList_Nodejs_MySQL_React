{"ast":null,"code":"import _defineProperty from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/react/react_users_sql/src/components/AddUser.js\";\nimport React, { Component } from 'react'; // JSX\n\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport Axios from 'axios';\n\nvar AddContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddContact, _Component);\n\n  function AddContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddContact).call(this, props));\n    _this.state = {\n      name: ' ',\n      email: ' ',\n      city: '',\n      phone: ' ',\n      website: '',\n      errors: {}\n    };\n\n    _this.updateInformation = function (event) {\n      event.preventDefault(); // Prevents page from reload\n      // if (!element.empty && element.complete)\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleNewContact = function (value, event) {\n      // event.preventDefault(); // Prevents page from reload\n      // let length = value.persons.length;\n      var newId = value.persons.length !== 0 ? value.persons[value.persons.length - 1].id + 1 : 1;\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          city = _this$state.city,\n          phone = _this$state.phone,\n          website = _this$state.website;\n\n      if (name === ' ') {\n        _this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n\n        return;\n      }\n\n      if (email === ' ') {\n        _this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n\n        return;\n      }\n\n      if (city === ' ') {\n        _this.setState({\n          errors: {\n            phone: 'City is required'\n          }\n        });\n\n        return;\n      }\n\n      if (phone === ' ') {\n        _this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n\n        return;\n      }\n\n      if (website === ' ') {\n        _this.setState({\n          errors: {\n            phone: 'Please write a website'\n          }\n        });\n\n        return;\n      }\n\n      var Person = {\n        name: name,\n        email: email,\n        city: city,\n        phone: phone,\n        website: website,\n        // id: newId,\n        errors: {}\n      };\n      Axios.post(\"http://localhost:1024/newuser\", Person).then(function (response) {\n        alert(response);\n      }); // const Person = {\n      //   name: this.nameInput.value,\n      //   email: this.emailInput.value,\n      //   phone: this.phoneInput.value\n      //   // id:\n      // };\n      // event.currentTarget.reset(); // Eliminating all that was written by the user\n\n      _this.props.history.push('/'); // Keeping the previous page (in case the user\n      // wants to go back)\n\n    };\n\n    _this.nameInput = React.createRef();\n    _this.emailInput = React.createRef();\n    _this.phoneInput = React.createRef();\n    _this.idInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(AddContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Add-Contact-Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Name\",\n        className: \"name form-control\",\n        name: \"name\",\n        placeholder: \"Enter name\" // ref={this.nameInput}\n        // value=\"Ex: Philip Task\"\n        ,\n        onChange: this.updateInformation,\n        error: this.state.errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"email\",\n        label: \"Email\",\n        className: \"email form-control\",\n        name: \"email\" // value={value.state.persons.email}\n        ,\n        placeholder: \"Enter email\" // ref={this.emailInput}\n        // value=\"Ex: name.lastname@email.com\"\n        ,\n        onChange: this.updateInformation,\n        error: this.state.errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"We'll never share your email with anyone else.\"), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"City\",\n        className: \"city form-control\",\n        name: \"city\" // value={value.state.persons.email}\n        ,\n        placeholder: \"Enter city name\" // ref={this.emailInput}\n        // value=\"Ex: name.lastname@email.com\"\n        ,\n        onChange: this.updateInformation,\n        error: this.state.errors.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Phone\",\n        className: \"phone form-control\",\n        name: \"phone\",\n        placeholder: \"Enter phone\" // ref={this.phoneInput}\n        // value=\"Ex: 200-299-2938947\"\n        ,\n        onChange: this.updateInformation,\n        error: this.state.errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), ' ', React.createElement(\"small\", {\n        id: \"emailHelp\",\n        className: \"form-text text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"We'll never share your phone with anyone else.\"), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Website\",\n        className: \"website form-control\",\n        name: \"website\",\n        placeholder: \"Enter website\" // ref={this.phoneInput}\n        // value=\"Ex: 200-299-2938947\"\n        ,\n        onChange: this.updateInformation,\n        error: this.state.errors.website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), ' ', React.createElement(\"button\", {\n        type: \"submit\" // value=\"Add Contact\"\n        ,\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.handleNewContact();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Add Contact\", ' '));\n    }\n  }]);\n\n  return AddContact;\n}(Component);\n\nexport default AddContact;","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql/src/components/AddUser.js"],"names":["React","Component","TextInputGroup","Axios","AddContact","props","state","name","email","city","phone","website","errors","updateInformation","event","preventDefault","setState","target","value","handleNewContact","newId","persons","length","id","Person","post","then","response","alert","history","push","nameInput","createRef","emailInput","phoneInput","idInput"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// JSX\n\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport Axios from 'axios';\n\nclass AddContact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nameInput = React.createRef();\n    this.emailInput = React.createRef();\n    this.phoneInput = React.createRef();\n    this.idInput = React.createRef();\n  }\n\n  state = {\n    name: ' ',\n    email: ' ',\n    city: '',\n    phone: ' ',\n    website: '',\n    errors: {}\n  };\n\n  updateInformation = event => {\n    event.preventDefault(); // Prevents page from reload\n    // if (!element.empty && element.complete)\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleNewContact = (value, event) => {\n    // event.preventDefault(); // Prevents page from reload\n    // let length = value.persons.length;\n    const newId =\n      value.persons.length !== 0\n        ? value.persons[value.persons.length - 1].id + 1\n        : 1;\n\n    const { name, email, city, phone, website } = this.state;\n\n    if (name === ' ') {\n      this.setState({\n        errors: { name: 'Name is required' }\n      });\n      return;\n    }\n    if (email === ' ') {\n      this.setState({\n        errors: { email: 'Email is required' }\n      });\n      return;\n    }\n    if (city === ' ') {\n      this.setState({\n        errors: { phone: 'City is required' }\n      });\n      return;\n    }\n    if (phone === ' ') {\n      this.setState({\n        errors: { phone: 'Phone is required' }\n      });\n      return;\n    }\n    if (website === ' ') {\n      this.setState({\n        errors: { phone: 'Please write a website' }\n      });\n      return;\n    }\n    const Person = {\n      name: name,\n      email: email,\n      city: city,\n      phone: phone,\n      website: website,\n      // id: newId,\n      errors: {}\n    };\n\n    Axios.post(`http://localhost:1024/newuser`, Person).then(response => {\n      alert(response);\n    });\n\n    // const Person = {\n    //   name: this.nameInput.value,\n    //   email: this.emailInput.value,\n    //   phone: this.phoneInput.value\n    //   // id:\n    // };\n\n    // event.currentTarget.reset(); // Eliminating all that was written by the user\n    this.props.history.push('/'); // Keeping the previous page (in case the user\n    // wants to go back)\n  };\n\n  render() {\n    return (\n      <div className=\"Add-Contact-Form\">\n        {/* <form onSubmit={this.handleNewContact}> */}\n        <TextInputGroup\n          type=\"text\"\n          label=\"Name\"\n          className=\"name form-control\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          // ref={this.nameInput}\n          // value=\"Ex: Philip Task\"\n          onChange={this.updateInformation}\n          error={this.state.errors.name}\n        />\n        <TextInputGroup\n          type=\"email\"\n          label=\"Email\"\n          className=\"email form-control\"\n          name=\"email\"\n          // value={value.state.persons.email}\n          placeholder=\"Enter email\"\n          // ref={this.emailInput}\n          // value=\"Ex: name.lastname@email.com\"\n          onChange={this.updateInformation}\n          error={this.state.errors.email}\n        />\n        <small id=\"emailHelp\" className=\"form-text text-muted\">\n          We'll never share your email with anyone else.\n        </small>\n        <TextInputGroup\n          type=\"text\"\n          label=\"City\"\n          className=\"city form-control\"\n          name=\"city\"\n          // value={value.state.persons.email}\n          placeholder=\"Enter city name\"\n          // ref={this.emailInput}\n          // value=\"Ex: name.lastname@email.com\"\n          onChange={this.updateInformation}\n          error={this.state.errors.city}\n        />\n        <TextInputGroup\n          type=\"text\"\n          label=\"Phone\"\n          className=\"phone form-control\"\n          name=\"phone\"\n          placeholder=\"Enter phone\"\n          // ref={this.phoneInput}\n          // value=\"Ex: 200-299-2938947\"\n          onChange={this.updateInformation}\n          error={this.state.errors.phone}\n        />{' '}\n        <small id=\"emailHelp\" className=\"form-text text-muted\">\n          We'll never share your phone with anyone else.\n        </small>\n        <TextInputGroup\n          type=\"text\"\n          label=\"Website\"\n          className=\"website form-control\"\n          name=\"website\"\n          placeholder=\"Enter website\"\n          // ref={this.phoneInput}\n          // value=\"Ex: 200-299-2938947\"\n          onChange={this.updateInformation}\n          error={this.state.errors.website}\n        />{' '}\n        <button\n          type=\"submit\"\n          // value=\"Add Contact\"\n          className=\"btn btn-primary\"\n          onClick={() => this.handleNewContact()}\n        >\n          Add Contact{' '}\n        </button>\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\nexport default AddContact;\n"]},"metadata":{},"sourceType":"module"}
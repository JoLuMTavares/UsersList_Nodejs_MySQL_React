{"ast":null,"code":"import _regeneratorRuntime from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/devugees/Desktop/react/react_users_sql/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/devugees/Desktop/react/react_users_sql/src/components/EditUser.js\";\nimport React, { Component } from 'react'; // JSX\n\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport Axios from 'axios'; // import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nvar EditContact =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditContact, _Component);\n\n  function EditContact() {\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditContact).call(this));\n    /*\n    this.nameInput = React.createRef();\n    this.emailInput = React.createRef();\n    this.cityInput = React.createRef();\n    this.phoneInput = React.createRef();\n    this.websiteInput = React.createRef();\n    this.idInput = React.createRef();*/\n    // console.log(this.props.match.params.id);\n    // console.log(this.props.match.params.name);\n\n    _this.updateInformation = function (event) {\n      event.preventDefault(); // Prevents page from reload\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleContact = function (event) {\n      var id = _this.props.match.params.id;\n      var _this$state = _this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          city = _this$state.city,\n          phone = _this$state.phone,\n          website = _this$state.website;\n\n      if (name === ' ') {\n        _this.setState({\n          errors: {\n            name: 'Name is required'\n          }\n        });\n\n        return;\n      }\n\n      if (email === ' ') {\n        _this.setState({\n          errors: {\n            email: 'Email is required'\n          }\n        });\n\n        return;\n      }\n\n      if (city === ' ') {\n        _this.setState({\n          errors: {\n            city: 'City is required'\n          }\n        });\n\n        return;\n      }\n\n      if (phone === ' ') {\n        _this.setState({\n          errors: {\n            phone: 'Phone is required'\n          }\n        });\n\n        return;\n      }\n\n      if (website === ' ') {\n        _this.setState({\n          errors: {\n            website: 'Please write a website'\n          }\n        });\n\n        return;\n      }\n\n      var Person = {\n        name: name,\n        email: email,\n        phone: phone,\n        id: id,\n        errors: {}\n      };\n      Axios.put(\"http://localhost:1024/userUpdate\", Person).then(function (response) {\n        alert('User successfully updated.');\n      });\n    };\n\n    _this.state = {\n      user: ''\n    };\n    return _this;\n  }\n  /*\n  state = {\n    user: ''\n  };\n  */\n  // Getting the right user from the database once again\n\n\n  _createClass(EditContact, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(this.props.match.params.id);\n                console.log('Testing...');\n                /*\n                try {\n                  Axios.get(\n                    'http://localhost:1024/user?id=' + this.props.match.params.id\n                  ).then(response => {\n                    this.setState({\n                      user: response.data[0]\n                    });\n                  });\n                } catch (error) {\n                  console.log('error = ' + error);\n                }*/\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Edit-Contact-Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Name\",\n        className: \"name form-control\",\n        name: \"name\",\n        defaultValue: this.state.user.name,\n        placeholder: \"Enter name\",\n        onChange: this.updateInformation,\n        error: this.state.errors.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"email\",\n        label: \"Email\",\n        className: \"email form-control\",\n        name: \"email\",\n        defaultValue: this.state.user.email,\n        placeholder: \"Enter email\",\n        onChange: this.updateInformation,\n        error: this.state.errors.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"City\",\n        className: \"city form-control\",\n        name: \"city\",\n        defaultValue: this.state.user.city,\n        placeholder: \"Enter city name\",\n        onChange: this.updateInformation,\n        error: this.state.errors.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Phone\",\n        className: \"phone form-control\",\n        name: \"phone\",\n        defaultValue: this.state.user.phone,\n        placeholder: \"Enter phone\",\n        onChange: this.updateInformation,\n        error: this.state.errors.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(TextInputGroup, {\n        type: \"text\",\n        label: \"Website\",\n        className: \"website form-control\",\n        name: \"website\",\n        defaultValue: this.state.user.website,\n        placeholder: \"Enter website\",\n        onChange: this.updateInformation,\n        error: this.state.errors.website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), ' ', React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          return _this2.handleContact();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Save\", ' '));\n    }\n  }]);\n\n  return EditContact;\n}(Component);\n\nexport default EditContact;","map":{"version":3,"sources":["/home/devugees/Desktop/react/react_users_sql/src/components/EditUser.js"],"names":["React","Component","TextInputGroup","Axios","EditContact","updateInformation","event","preventDefault","setState","target","name","value","handleContact","id","props","match","params","state","email","city","phone","website","errors","Person","put","then","response","alert","user","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// JSX\n\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport Axios from 'axios';\n\n// import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nclass EditContact extends Component {\n  constructor() {\n    super();\n    /*\n    this.nameInput = React.createRef();\n    this.emailInput = React.createRef();\n    this.cityInput = React.createRef();\n    this.phoneInput = React.createRef();\n    this.websiteInput = React.createRef();\n    this.idInput = React.createRef();*/\n    // console.log(this.props.match.params.id);\n    // console.log(this.props.match.params.name);\n    this.state = { user: '' };\n  }\n  /*\n  state = {\n    user: ''\n  };\n*/\n  // Getting the right user from the database once again\n  async componentDidMount() {\n    console.log(this.props.match.params.id);\n    console.log('Testing...');\n    /*\n    try {\n      Axios.get(\n        'http://localhost:1024/user?id=' + this.props.match.params.id\n      ).then(response => {\n        this.setState({\n          user: response.data[0]\n        });\n      });\n    } catch (error) {\n      console.log('error = ' + error);\n    }*/\n  }\n\n  updateInformation = event => {\n    event.preventDefault(); // Prevents page from reload\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleContact = event => {\n    const { id } = this.props.match.params;\n\n    const { name, email, city, phone, website } = this.state;\n\n    if (name === ' ') {\n      this.setState({\n        errors: { name: 'Name is required' }\n      });\n      return;\n    }\n    if (email === ' ') {\n      this.setState({\n        errors: { email: 'Email is required' }\n      });\n      return;\n    }\n    if (city === ' ') {\n      this.setState({\n        errors: { city: 'City is required' }\n      });\n      return;\n    }\n    if (phone === ' ') {\n      this.setState({\n        errors: { phone: 'Phone is required' }\n      });\n      return;\n    }\n    if (website === ' ') {\n      this.setState({\n        errors: { website: 'Please write a website' }\n      });\n      return;\n    }\n    const Person = {\n      name: name,\n      email: email,\n      phone: phone,\n      id: id,\n      errors: {}\n    };\n\n    Axios.put(`http://localhost:1024/userUpdate`, Person).then(response => {\n      alert('User successfully updated.');\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"Edit-Contact-Form\">\n        <TextInputGroup\n          type=\"text\"\n          label=\"Name\"\n          className=\"name form-control\"\n          name=\"name\"\n          defaultValue={this.state.user.name}\n          placeholder=\"Enter name\"\n          onChange={this.updateInformation}\n          error={this.state.errors.name}\n        />\n        <TextInputGroup\n          type=\"email\"\n          label=\"Email\"\n          className=\"email form-control\"\n          name=\"email\"\n          defaultValue={this.state.user.email}\n          placeholder=\"Enter email\"\n          onChange={this.updateInformation}\n          error={this.state.errors.email}\n        />\n        <TextInputGroup\n          type=\"text\"\n          label=\"City\"\n          className=\"city form-control\"\n          name=\"city\"\n          defaultValue={this.state.user.city}\n          placeholder=\"Enter city name\"\n          onChange={this.updateInformation}\n          error={this.state.errors.city}\n        />\n        <TextInputGroup\n          type=\"text\"\n          label=\"Phone\"\n          className=\"phone form-control\"\n          name=\"phone\"\n          defaultValue={this.state.user.phone}\n          placeholder=\"Enter phone\"\n          onChange={this.updateInformation}\n          error={this.state.errors.phone}\n        />\n        <TextInputGroup\n          type=\"text\"\n          label=\"Website\"\n          className=\"website form-control\"\n          name=\"website\"\n          defaultValue={this.state.user.website}\n          placeholder=\"Enter website\"\n          onChange={this.updateInformation}\n          error={this.state.errors.website}\n        />{' '}\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          onClick={() => this.handleContact()}\n        >\n          Save{' '}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditContact;\n"]},"metadata":{},"sourceType":"module"}